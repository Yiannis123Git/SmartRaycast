"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[152],{98123:e=>{e.exports=JSON.parse('{"functions":[{"name":"DestroyChannel","desc":"You can use this to destroy channels instead of calling ``:Destroy()`` on a channel.","params":[{"name":"WhatToDestroy","desc":"","lua_type":"string | Channel"}],"returns":[],"function_type":"static","source":{"line":369,"path":"src/init.lua"}},{"name":"GetChannelObject","desc":"You can use this function to get a Channel Object by providing the name of the Channel, if the Channel does not exist then nil will be returned ","params":[{"name":"ChannelName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Channel?"}],"function_type":"static","source":{"line":387,"path":"src/init.lua"}},{"name":"Cast","desc":"Cast a ray similiar to ``workspace:Raycast()``. \\nInstead of using this function you can instead do: \\n``workspace:Raycast(Origin,Direction,Channel.RayParams)``","params":[{"name":"Origin","desc":"","lua_type":"Vector3"},{"name":"Direction","desc":"","lua_type":"Vector3"},{"name":"ChannelName","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":400,"path":"src/init.lua"}},{"name":"CreateChannel","desc":":::warning \\nIf you rely on constantly creating and destroying channels, you should set the ``.SanityCheck`` property of the module to false to avoid potential overhead.\\n:::\\n\\nCreates a new channel.","params":[{"name":"ChannelName","desc":"","lua_type":"string"},{"name":"BaseArray","desc":"","lua_type":"{ Instance }?"},{"name":"InstancesToCheck","desc":"","lua_type":"{ Instance }?"},{"name":"InstanceLogic","desc":"","lua_type":"((Instance) -> boolean)?"},{"name":"FilterType","desc":"","lua_type":"Enum.RaycastFilterType?"},{"name":"IgnoreWater","desc":"","lua_type":"boolean?"},{"name":"CollisionGroup","desc":"","lua_type":"string?"},{"name":"RespectCanCollide","desc":"","lua_type":"boolean?"},{"name":"BruteForceAllSlow","desc":"","lua_type":"boolean?"}],"returns":[],"function_type":"static","source":{"line":425,"path":"src/init.lua"}}],"properties":[{"name":"SanityCheck","desc":"Setting this property to false will disable sanity checking.","lua_type":"boolean","source":{"line":28,"path":"src/init.lua"}},{"name":"Warnings","desc":"Setting this property to false will disable warnings.","lua_type":"boolean","source":{"line":35,"path":"src/init.lua"}}],"types":[],"name":"SmartRaycast","desc":"","source":{"line":21,"path":"src/init.lua"}}')}}]);