[{"title":"Channel","type":0,"sectionRef":"#","url":"/SmartRaycast/api/Channel","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#properties","content":" "},{"title":"_Name​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#_Name","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Channel._Name: string Name used to identify channels internaly.  "},{"title":"RayParams​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#RayParams","content":"&lt;/&gt; Channel.RayParams: RaycastParams RaycastParams tied to the Channel. All properties of the RaycastParams can be changed in runtime excluding FilterDescendantsInstances  "},{"title":"_Janitor​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#_Janitor","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Channel._Janitor: Janitor Janitor Object used for cleanup.  "},{"title":"_ChannelTag​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#_ChannelTag","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Channel._ChannelTag: string? Collection Service Tag used to tag instances associated with the Channel.  "},{"title":"_MaintenanceCopy​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#_MaintenanceCopy","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Channel._MaintenanceCopy: {Instance? } A copy of FilterDescendantsInstances used to maintain the actual FilterDescendantsInstances.  "},{"title":"_FilterCounter​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#_FilterCounter","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Channel._FilterCounter: number Keeps track of the number of instances in FilterDescendantsInstances. "},{"title":"Functions​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#new","content":"&lt;/&gt; Channel.new( ChannelName: string, BaseArray: {Instance }?, InstancesToCheck: {Instance }?, InstanceLogic: ((Instance ) → boolean)?, FilterType: Enum.RaycastFilterType?, IgnoreWater: boolean?, CollisionGroup: string?, RespectCanCollide: boolean?, BruteForceAllSlow: boolean? ) → Channel  info The CreateChannel module function is used to create new channels Creates a new Channel object.  "},{"title":"Destroy​","type":1,"pageTitle":"Channel","url":"/SmartRaycast/api/Channel#Destroy","content":"&lt;/&gt; Channel:Destroy() → () Destroys a channel by cleaning up references and disconnecting events. After :Destroy is called, the corresponding FilterDescendantsInstances will no longer be actively maintained. "},{"title":"SmartRaycast","type":0,"sectionRef":"#","url":"/SmartRaycast/api/SmartRaycast","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#properties","content":" "},{"title":"SanityCheck​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#SanityCheck","content":"&lt;/&gt; SmartRaycast.SanityCheck: boolean Setting this property to false will disable sanity checking.  "},{"title":"Warnings​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#Warnings","content":"&lt;/&gt; SmartRaycast.Warnings: boolean Setting this property to false will disable warnings. "},{"title":"Functions​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#functions","content":" "},{"title":"DestroyChannel​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#DestroyChannel","content":"&lt;/&gt; SmartRaycast.DestroyChannel(WhatToDestroy: string | Channel) → () You can use this to destroy channels instead of calling :Destroy() on a channel.  "},{"title":"GetChannelObject​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#GetChannelObject","content":"&lt;/&gt; SmartRaycast.GetChannelObject(ChannelName: string) → Channel? You can use this function to get a Channel Object by providing the name of the Channel, if the Channel does not exist then nil will be returned  "},{"title":"Cast​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#Cast","content":"&lt;/&gt; SmartRaycast.Cast( Origin: Vector3 , Direction: Vector3 , ChannelName: string ) → () Cast a ray similiar to workspace:Raycast(). Instead of using this function you can instead do: workspace:Raycast(Origin,Direction,Channel.RayParams)  "},{"title":"CreateChannel​","type":1,"pageTitle":"SmartRaycast","url":"/SmartRaycast/api/SmartRaycast#CreateChannel","content":"&lt;/&gt; SmartRaycast.CreateChannel( ChannelName: string,-- Name of the channel that will be created. BaseArray: {Instance }?,-- Instances that will always remain present in the FilterDescendantsInstances Array. InstancesToCheck: {Instance }?,-- Instances that will have their Descendants checked in runtime using the 'InstanceLogic' function. InstanceLogic: ((Instance ) → boolean)?,-- A function that should recieve an instance and return true if the instance should be added in the FilterDescendantsInstances Array. This function is run in protected call so you don't need to worry about any errors. FilterType: Enum.RaycastFilterType?, IgnoreWater: boolean?, CollisionGroup: string?, RespectCanCollide: boolean?, BruteForceAllSlow: boolean? ) → ()  warning If you rely on constantly creating and destroying channels, you should set the .SanityCheck property of the module to false to avoid potential overhead. note InstanceLogic Example: local function InstanceLogic(Inst: Instance) if Inst.Size.X &gt; 100 then -- this will never error due pcall so it is safe return true end end Creates a new channel. "}]